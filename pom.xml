<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.organization</groupId>
	<artifactId>java-companion-project</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Java Companion Project</name>
	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.boot.version>2.6.14</spring.boot.version>
	</properties>
<!--	<repositories>
		<repository>
			<id>github</id>
			<name>GitHub Mbd06b Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/Mbd06b/bootcamper-project</url>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>github</id>
			<name>Releases</name>
			<url>https://maven.pkg.github.com/Mbd06b/bootcamper-project</url>
		</repository>
		<snapshotRepository>
			<id>github</id>
			<name>Snapshot</name>
			<url>https://maven.pkg.github.com/Mbd06b/bootcamper-project</url>
		</snapshotRepository>
	</distributionManagement>
  	
	<dependencyManagement>
		<dependencies>
			&lt;!&ndash; By specifying our own module in "dependencyManagement" in the parent pom         &ndash;&gt;
			&lt;!&ndash; this allows us to build a dependency, AND USE it as a dependency in child pom(s) &ndash;&gt;
			&lt;!&ndash; without every module inheriting, which is what happens when                      &ndash;&gt;
			&lt;!&ndash; a more typical dependency is specified in a parent pom.xml                       &ndash;&gt;
			&lt;!&ndash; this is a useful pom strategy for creating common modules,                       &ndash;&gt;
			&lt;!&ndash; and avoids a self-referenced recusive loop.                                      &ndash;&gt;
			<dependency> 
				<groupId>com.organization.mvcproject</groupId>
				<artifactId>mgl-automation-testing</artifactId>
				<version>${project.version}</version>
			</dependency> 
		</dependencies>
	</dependencyManagement>-->
	<modules>
		<module>web-automation-testing</module>
		<module>activities</module>
		<module>docs</module>
		<module>mgl-webapp</module>
		<module>mgl-webapp_task1-0</module>
		<module>mgl-webapp_task2-0</module>
		<module>mgl-webapp_task2-1</module>
		<module>mgl-webapp_review</module>	
	</modules>
</project>



